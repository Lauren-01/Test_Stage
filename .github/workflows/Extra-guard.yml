name: Setup Cloud Formation Guard Action  
run-name: ${{ github.actor }} is checking the code with the premade action cfn-guard [new]
on: 
  # [push]
  push:
    branches: #new commits on these branches always trigger
      - main
      - Demo_test
  pull_request:
jobs:
  cloudformation-guard-action-custom-rules:
    runs-on: ubuntu-latest
    permissions:
      # only required when create-review is true
      pull-requests: write
    steps:
      - name: CloudFormation Guard validate
        uses: aws-cloudformation/cloudformation-guard@action-v0.0.3
        with:
          rules: './.github/customrules/cfn-guard/'
          data: './templates/'
          create-review: true

      - name: path
        run: ls .github/customrules/cfn-guard
          
  cloudformation-guard-ruleset-action:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variable
        run: echo "JSON_FILE=rule_set_cis_aws_benchmark_level_1.json" >> $GITHUB_ENV

      - name: Install jq
        run: sudo apt-get install jq


      - name: Download and process ruleset
        run: |
          # Controleer of de vereiste omgevingsvariabelen zijn ingesteld
          if [ -z "$JSON_FILE" ]; then
            echo "Error: JSON_FILE is not set."
            exit 1
          fi

          # Stel de basis-URL in voor de mappings
          MAPPINGS_URL="https://raw.githubusercontent.com/aws-cloudformation/aws-guard-rules-registry/main/mappings"
          
          # Stel de basis-URL in voor de regels
          RULES_URL="https://raw.githubusercontent.com/aws-cloudformation/aws-guard-rules-registry/main/rules/aws"

          # # Stel de basis-URL in voor de mappings
          # MAPPINGS_URL="https://github.com/aws-cloudformation/aws-guard-rules-registry/tree/main/mappings"

          # # Stel de basis-URL in voor de regels
          # RULES_URL="https://github.com/aws-cloudformation/aws-guard-rules-registry/tree/main/"

          # Controleer of de download map bestaat, zo niet, maak deze aan
          RULES_DIR=".github/customrules/downloaded_rulesets"
          mkdir -p "$RULES_DIR"

          # Download het JSON-bestand van de opgegeven URL
          curl -o "$JSON_FILE" "$MAPPINGS_URL/$JSON_FILE"


          # Controleer de inhoud van het gedownloade JSON-bestand
          echo "Content of $JSON_FILE:"
          cat "$JSON_FILE"


          # Controleer of het bestand correct is gedownload
          if [ ! -s "$JSON_FILE" ]; then
            echo "Failed to download $JSON_FILE or the file is empty."
            exit 1
          fi

          # Verwijder eventuele regels die er nog in stonden zodat de nieuwe enkel getest worden
          rm -f $RULES_DIR/*

          echo "map is leeg!"

          # Gebruik jq om de regels te extraheren en download de individuele regels
          jq -r '.mappings[]?.guardFilePath' "$JSON_FILE" | while read -r rule; do
            rule_url="$RULES_URL/$rule"
            local_rule_path="$RULES_DIR/$(basename $rule)"
            echo "$local_rule_path"
            echo "Downloading $local_rule_path from $rule_url"
            curl -s -o "$local_rule_path" "$rule_url"

            # Controleer of het bestand correct is gedownload
            if [ ! -s "$local_rule_path" ]; then
              echo "Failed to download $local_rule_path or the file is empty."
              exit 1
            fi

            # Toon inhoud van het gedownloade bestand voor debugging
            echo "Content of $local_rule_path:"
            cat "$local_rule_path"
          done

          echo "All rules downloaded successfully."

      - name: List downloaded rulesets for debugging
        run: ls -R .github/customrules/downloaded_rulesets


      # - name: download ruleset
      #   run: './.github/customrules/DownloadRules.sh'

      - name: Validate ruleset
        uses: aws-cloudformation/cloudformation-guard@action-v0.0.3
        with:
          rules: './.github/customrules/downloaded_rulesets'
          data: './templates/'
          create-review: true
